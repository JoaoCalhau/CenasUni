Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | %empty

    4 declaration: global_var
    5            | fun_arg
    6            | fun

    7 global_var: OPPAR ID IDENTIFIER VAR type CLPAR
    8           | OPPAR ID IDENTIFIER VAR type initial_value CLPAR

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

   10 fun: FUNCTION IDENTIFIER body

   11 body: line body
   12     | label COLON body
   13     | ret

   14 line: double_inst
   15     | single_inst
   16     | load_inst
   17     | value_inst
   18     | store_inst
   19     | jump_inst
   20     | cjump_inst
   21     | fun_call
   22     | print_inst

   23 double_inst: temp ARROW dinst temp COMMA temp

   24 single_inst: temp ARROW sinst temp

   25 load_inst: temp ARROW load IDENTIFIER

   26 value_inst: temp ARROW VALUE INT_LITERAL

   27 store_inst: IDENTIFIER ARROW store temp

   28 jump_inst: JUMP label

   29 cjump_inst: CJUMP temp COMMA label COMMA label

   30 print_inst: print temp

   31 fun_args: OPPAR type IDENTIFIER CLPAR fun_args
   32         | %empty

   33 args: temp more_args
   34     | %empty

   35 more_args: COMMA temp more_args
   36          | %empty

   37 fun_call: CALL IDENTIFIER COMMA OPRPAR args CLRPAR
   38         | temp ARROW ICALL IDENTIFIER COMMA OPRPAR args CLRPAR

   39 dinst: EQ
   40      | NE
   41      | LT
   42      | LE
   43      | ADD
   44      | SUB
   45      | MUL
   46      | DIV
   47      | MOD

   48 sinst: NOT
   49      | INV
   50      | COPY

   51 store: GSTORE
   52      | LSTORE
   53      | ASTORE

   54 load: GLOAD
   55     | LLOAD
   56     | ALOAD

   57 print: IPRINT
   58      | BPRINT

   59 ret: RETURN
   60    | IRETURN temp

   61 temp: TEMP INT_LITERAL

   62 label: LABEL INT_LITERAL

   63 initial_value: INT_LITERAL
   64              | BOOL_LITERAL

   65 type: INT
   66     | BOOL
   67     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 7 8 9 10 25 27 31 37 38
INT_LITERAL (259) 26 61 62 63
BOOL_LITERAL (260) 64
OPPAR (261) 7 8 9 31
CLPAR (262) 7 8 9 31
OPRPAR (263) 9 37 38
CLRPAR (264) 9 37 38
COMMA (265) 23 29 35 37 38
ARROW (266) 23 24 25 26 27 38
COLON (267) 12
FUNCTION (268) 10
FUN (269) 9
VAR (270) 7 8
ID (271) 7 8 9
INT (272) 65
BOOL (273) 66
VOID (274) 67
JUMP (275) 28
CJUMP (276) 29
EQ (277) 39
NE (278) 40
LT (279) 41
LE (280) 42
ADD (281) 43
SUB (282) 44
MUL (283) 45
DIV (284) 46
MOD (285) 47
NOT (286) 48
INV (287) 49
GLOAD (288) 54
LLOAD (289) 55
ALOAD (290) 56
VALUE (291) 26
CALL (292) 37
ICALL (293) 38
IPRINT (294) 57
BPRINT (295) 58
GSTORE (296) 51
LSTORE (297) 52
ASTORE (298) 53
RETURN (299) 59
IRETURN (300) 60
COPY (301) 50
TEMP (302) 61
LABEL (303) 62


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
declarations (51)
    on left: 2 3, on right: 1 2
declaration (52)
    on left: 4 5 6, on right: 2
global_var (53)
    on left: 7 8, on right: 4
fun_arg (54)
    on left: 9, on right: 5
fun (55)
    on left: 10, on right: 6
body (56)
    on left: 11 12 13, on right: 10 11 12
line (57)
    on left: 14 15 16 17 18 19 20 21 22, on right: 11
double_inst (58)
    on left: 23, on right: 14
single_inst (59)
    on left: 24, on right: 15
load_inst (60)
    on left: 25, on right: 16
value_inst (61)
    on left: 26, on right: 17
store_inst (62)
    on left: 27, on right: 18
jump_inst (63)
    on left: 28, on right: 19
cjump_inst (64)
    on left: 29, on right: 20
print_inst (65)
    on left: 30, on right: 22
fun_args (66)
    on left: 31 32, on right: 9 31
args (67)
    on left: 33 34, on right: 37 38
more_args (68)
    on left: 35 36, on right: 33 35
fun_call (69)
    on left: 37 38, on right: 21
dinst (70)
    on left: 39 40 41 42 43 44 45 46 47, on right: 23
sinst (71)
    on left: 48 49 50, on right: 24
store (72)
    on left: 51 52 53, on right: 27
load (73)
    on left: 54 55 56, on right: 25
print (74)
    on left: 57 58, on right: 30
ret (75)
    on left: 59 60, on right: 13
temp (76)
    on left: 61, on right: 23 24 25 26 27 29 30 33 35 38 60
label (77)
    on left: 62, on right: 12 28 29
initial_value (78)
    on left: 63 64, on right: 8
type (79)
    on left: 65 66 67, on right: 7 8 9 31


State 0

    0 $accept: . program $end

    OPPAR     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 3 (declarations)

    program       go to state 3
    declarations  go to state 4
    declaration   go to state 5
    global_var    go to state 6
    fun_arg       go to state 7
    fun           go to state 8


State 1

    7 global_var: OPPAR . ID IDENTIFIER VAR type CLPAR
    8           | OPPAR . ID IDENTIFIER VAR type initial_value CLPAR
    9 fun_arg: OPPAR . ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    ID  shift, and go to state 9


State 2

   10 fun: FUNCTION . IDENTIFIER body

    IDENTIFIER  shift, and go to state 10


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 5

    2 declarations: declaration . declarations

    OPPAR     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 3 (declarations)

    declarations  go to state 12
    declaration   go to state 5
    global_var    go to state 6
    fun_arg       go to state 7
    fun           go to state 8


State 6

    4 declaration: global_var .

    $default  reduce using rule 4 (declaration)


State 7

    5 declaration: fun_arg .

    $default  reduce using rule 5 (declaration)


State 8

    6 declaration: fun .

    $default  reduce using rule 6 (declaration)


State 9

    7 global_var: OPPAR ID . IDENTIFIER VAR type CLPAR
    8           | OPPAR ID . IDENTIFIER VAR type initial_value CLPAR
    9 fun_arg: OPPAR ID . IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    IDENTIFIER  shift, and go to state 13


State 10

   10 fun: FUNCTION IDENTIFIER . body

    IDENTIFIER  shift, and go to state 14
    JUMP        shift, and go to state 15
    CJUMP       shift, and go to state 16
    CALL        shift, and go to state 17
    IPRINT      shift, and go to state 18
    BPRINT      shift, and go to state 19
    RETURN      shift, and go to state 20
    IRETURN     shift, and go to state 21
    TEMP        shift, and go to state 22
    LABEL       shift, and go to state 23

    body         go to state 24
    line         go to state 25
    double_inst  go to state 26
    single_inst  go to state 27
    load_inst    go to state 28
    value_inst   go to state 29
    store_inst   go to state 30
    jump_inst    go to state 31
    cjump_inst   go to state 32
    print_inst   go to state 33
    fun_call     go to state 34
    print        go to state 35
    ret          go to state 36
    temp         go to state 37
    label        go to state 38


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 13

    7 global_var: OPPAR ID IDENTIFIER . VAR type CLPAR
    8           | OPPAR ID IDENTIFIER . VAR type initial_value CLPAR
    9 fun_arg: OPPAR ID IDENTIFIER . FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    FUN  shift, and go to state 39
    VAR  shift, and go to state 40


State 14

   27 store_inst: IDENTIFIER . ARROW store temp

    ARROW  shift, and go to state 41


State 15

   28 jump_inst: JUMP . label

    LABEL  shift, and go to state 23

    label  go to state 42


State 16

   29 cjump_inst: CJUMP . temp COMMA label COMMA label

    TEMP  shift, and go to state 22

    temp  go to state 43


State 17

   37 fun_call: CALL . IDENTIFIER COMMA OPRPAR args CLRPAR

    IDENTIFIER  shift, and go to state 44


State 18

   57 print: IPRINT .

    $default  reduce using rule 57 (print)


State 19

   58 print: BPRINT .

    $default  reduce using rule 58 (print)


State 20

   59 ret: RETURN .

    $default  reduce using rule 59 (ret)


State 21

   60 ret: IRETURN . temp

    TEMP  shift, and go to state 22

    temp  go to state 45


State 22

   61 temp: TEMP . INT_LITERAL

    INT_LITERAL  shift, and go to state 46


State 23

   62 label: LABEL . INT_LITERAL

    INT_LITERAL  shift, and go to state 47


State 24

   10 fun: FUNCTION IDENTIFIER body .

    $default  reduce using rule 10 (fun)


State 25

   11 body: line . body

    IDENTIFIER  shift, and go to state 14
    JUMP        shift, and go to state 15
    CJUMP       shift, and go to state 16
    CALL        shift, and go to state 17
    IPRINT      shift, and go to state 18
    BPRINT      shift, and go to state 19
    RETURN      shift, and go to state 20
    IRETURN     shift, and go to state 21
    TEMP        shift, and go to state 22
    LABEL       shift, and go to state 23

    body         go to state 48
    line         go to state 25
    double_inst  go to state 26
    single_inst  go to state 27
    load_inst    go to state 28
    value_inst   go to state 29
    store_inst   go to state 30
    jump_inst    go to state 31
    cjump_inst   go to state 32
    print_inst   go to state 33
    fun_call     go to state 34
    print        go to state 35
    ret          go to state 36
    temp         go to state 37
    label        go to state 38


State 26

   14 line: double_inst .

    $default  reduce using rule 14 (line)


State 27

   15 line: single_inst .

    $default  reduce using rule 15 (line)


State 28

   16 line: load_inst .

    $default  reduce using rule 16 (line)


State 29

   17 line: value_inst .

    $default  reduce using rule 17 (line)


State 30

   18 line: store_inst .

    $default  reduce using rule 18 (line)


State 31

   19 line: jump_inst .

    $default  reduce using rule 19 (line)


State 32

   20 line: cjump_inst .

    $default  reduce using rule 20 (line)


State 33

   22 line: print_inst .

    $default  reduce using rule 22 (line)


State 34

   21 line: fun_call .

    $default  reduce using rule 21 (line)


State 35

   30 print_inst: print . temp

    TEMP  shift, and go to state 22

    temp  go to state 49


State 36

   13 body: ret .

    $default  reduce using rule 13 (body)


State 37

   23 double_inst: temp . ARROW dinst temp COMMA temp
   24 single_inst: temp . ARROW sinst temp
   25 load_inst: temp . ARROW load IDENTIFIER
   26 value_inst: temp . ARROW VALUE INT_LITERAL
   38 fun_call: temp . ARROW ICALL IDENTIFIER COMMA OPRPAR args CLRPAR

    ARROW  shift, and go to state 50


State 38

   12 body: label . COLON body

    COLON  shift, and go to state 51


State 39

    9 fun_arg: OPPAR ID IDENTIFIER FUN . type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    INT   shift, and go to state 52
    BOOL  shift, and go to state 53
    VOID  shift, and go to state 54

    type  go to state 55


State 40

    7 global_var: OPPAR ID IDENTIFIER VAR . type CLPAR
    8           | OPPAR ID IDENTIFIER VAR . type initial_value CLPAR

    INT   shift, and go to state 52
    BOOL  shift, and go to state 53
    VOID  shift, and go to state 54

    type  go to state 56


State 41

   27 store_inst: IDENTIFIER ARROW . store temp

    GSTORE  shift, and go to state 57
    LSTORE  shift, and go to state 58
    ASTORE  shift, and go to state 59

    store  go to state 60


State 42

   28 jump_inst: JUMP label .

    $default  reduce using rule 28 (jump_inst)


State 43

   29 cjump_inst: CJUMP temp . COMMA label COMMA label

    COMMA  shift, and go to state 61


State 44

   37 fun_call: CALL IDENTIFIER . COMMA OPRPAR args CLRPAR

    COMMA  shift, and go to state 62


State 45

   60 ret: IRETURN temp .

    $default  reduce using rule 60 (ret)


State 46

   61 temp: TEMP INT_LITERAL .

    $default  reduce using rule 61 (temp)


State 47

   62 label: LABEL INT_LITERAL .

    $default  reduce using rule 62 (label)


State 48

   11 body: line body .

    $default  reduce using rule 11 (body)


State 49

   30 print_inst: print temp .

    $default  reduce using rule 30 (print_inst)


State 50

   23 double_inst: temp ARROW . dinst temp COMMA temp
   24 single_inst: temp ARROW . sinst temp
   25 load_inst: temp ARROW . load IDENTIFIER
   26 value_inst: temp ARROW . VALUE INT_LITERAL
   38 fun_call: temp ARROW . ICALL IDENTIFIER COMMA OPRPAR args CLRPAR

    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LT     shift, and go to state 65
    LE     shift, and go to state 66
    ADD    shift, and go to state 67
    SUB    shift, and go to state 68
    MUL    shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71
    NOT    shift, and go to state 72
    INV    shift, and go to state 73
    GLOAD  shift, and go to state 74
    LLOAD  shift, and go to state 75
    ALOAD  shift, and go to state 76
    VALUE  shift, and go to state 77
    ICALL  shift, and go to state 78
    COPY   shift, and go to state 79

    dinst  go to state 80
    sinst  go to state 81
    load   go to state 82


State 51

   12 body: label COLON . body

    IDENTIFIER  shift, and go to state 14
    JUMP        shift, and go to state 15
    CJUMP       shift, and go to state 16
    CALL        shift, and go to state 17
    IPRINT      shift, and go to state 18
    BPRINT      shift, and go to state 19
    RETURN      shift, and go to state 20
    IRETURN     shift, and go to state 21
    TEMP        shift, and go to state 22
    LABEL       shift, and go to state 23

    body         go to state 83
    line         go to state 25
    double_inst  go to state 26
    single_inst  go to state 27
    load_inst    go to state 28
    value_inst   go to state 29
    store_inst   go to state 30
    jump_inst    go to state 31
    cjump_inst   go to state 32
    print_inst   go to state 33
    fun_call     go to state 34
    print        go to state 35
    ret          go to state 36
    temp         go to state 37
    label        go to state 38


State 52

   65 type: INT .

    $default  reduce using rule 65 (type)


State 53

   66 type: BOOL .

    $default  reduce using rule 66 (type)


State 54

   67 type: VOID .

    $default  reduce using rule 67 (type)


State 55

    9 fun_arg: OPPAR ID IDENTIFIER FUN type . OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    OPRPAR  shift, and go to state 84


State 56

    7 global_var: OPPAR ID IDENTIFIER VAR type . CLPAR
    8           | OPPAR ID IDENTIFIER VAR type . initial_value CLPAR

    INT_LITERAL   shift, and go to state 85
    BOOL_LITERAL  shift, and go to state 86
    CLPAR         shift, and go to state 87

    initial_value  go to state 88


State 57

   51 store: GSTORE .

    $default  reduce using rule 51 (store)


State 58

   52 store: LSTORE .

    $default  reduce using rule 52 (store)


State 59

   53 store: ASTORE .

    $default  reduce using rule 53 (store)


State 60

   27 store_inst: IDENTIFIER ARROW store . temp

    TEMP  shift, and go to state 22

    temp  go to state 89


State 61

   29 cjump_inst: CJUMP temp COMMA . label COMMA label

    LABEL  shift, and go to state 23

    label  go to state 90


State 62

   37 fun_call: CALL IDENTIFIER COMMA . OPRPAR args CLRPAR

    OPRPAR  shift, and go to state 91


State 63

   39 dinst: EQ .

    $default  reduce using rule 39 (dinst)


State 64

   40 dinst: NE .

    $default  reduce using rule 40 (dinst)


State 65

   41 dinst: LT .

    $default  reduce using rule 41 (dinst)


State 66

   42 dinst: LE .

    $default  reduce using rule 42 (dinst)


State 67

   43 dinst: ADD .

    $default  reduce using rule 43 (dinst)


State 68

   44 dinst: SUB .

    $default  reduce using rule 44 (dinst)


State 69

   45 dinst: MUL .

    $default  reduce using rule 45 (dinst)


State 70

   46 dinst: DIV .

    $default  reduce using rule 46 (dinst)


State 71

   47 dinst: MOD .

    $default  reduce using rule 47 (dinst)


State 72

   48 sinst: NOT .

    $default  reduce using rule 48 (sinst)


State 73

   49 sinst: INV .

    $default  reduce using rule 49 (sinst)


State 74

   54 load: GLOAD .

    $default  reduce using rule 54 (load)


State 75

   55 load: LLOAD .

    $default  reduce using rule 55 (load)


State 76

   56 load: ALOAD .

    $default  reduce using rule 56 (load)


State 77

   26 value_inst: temp ARROW VALUE . INT_LITERAL

    INT_LITERAL  shift, and go to state 92


State 78

   38 fun_call: temp ARROW ICALL . IDENTIFIER COMMA OPRPAR args CLRPAR

    IDENTIFIER  shift, and go to state 93


State 79

   50 sinst: COPY .

    $default  reduce using rule 50 (sinst)


State 80

   23 double_inst: temp ARROW dinst . temp COMMA temp

    TEMP  shift, and go to state 22

    temp  go to state 94


State 81

   24 single_inst: temp ARROW sinst . temp

    TEMP  shift, and go to state 22

    temp  go to state 95


State 82

   25 load_inst: temp ARROW load . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 83

   12 body: label COLON body .

    $default  reduce using rule 12 (body)


State 84

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR . fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR

    OPPAR  shift, and go to state 97

    $default  reduce using rule 32 (fun_args)

    fun_args  go to state 98


State 85

   63 initial_value: INT_LITERAL .

    $default  reduce using rule 63 (initial_value)


State 86

   64 initial_value: BOOL_LITERAL .

    $default  reduce using rule 64 (initial_value)


State 87

    7 global_var: OPPAR ID IDENTIFIER VAR type CLPAR .

    $default  reduce using rule 7 (global_var)


State 88

    8 global_var: OPPAR ID IDENTIFIER VAR type initial_value . CLPAR

    CLPAR  shift, and go to state 99


State 89

   27 store_inst: IDENTIFIER ARROW store temp .

    $default  reduce using rule 27 (store_inst)


State 90

   29 cjump_inst: CJUMP temp COMMA label . COMMA label

    COMMA  shift, and go to state 100


State 91

   37 fun_call: CALL IDENTIFIER COMMA OPRPAR . args CLRPAR

    TEMP  shift, and go to state 22

    $default  reduce using rule 34 (args)

    args  go to state 101
    temp  go to state 102


State 92

   26 value_inst: temp ARROW VALUE INT_LITERAL .

    $default  reduce using rule 26 (value_inst)


State 93

   38 fun_call: temp ARROW ICALL IDENTIFIER . COMMA OPRPAR args CLRPAR

    COMMA  shift, and go to state 103


State 94

   23 double_inst: temp ARROW dinst temp . COMMA temp

    COMMA  shift, and go to state 104


State 95

   24 single_inst: temp ARROW sinst temp .

    $default  reduce using rule 24 (single_inst)


State 96

   25 load_inst: temp ARROW load IDENTIFIER .

    $default  reduce using rule 25 (load_inst)


State 97

   31 fun_args: OPPAR . type IDENTIFIER CLPAR fun_args

    INT   shift, and go to state 52
    BOOL  shift, and go to state 53
    VOID  shift, and go to state 54

    type  go to state 105


State 98

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args . CLRPAR OPRPAR fun_args CLRPAR CLPAR

    CLRPAR  shift, and go to state 106


State 99

    8 global_var: OPPAR ID IDENTIFIER VAR type initial_value CLPAR .

    $default  reduce using rule 8 (global_var)


State 100

   29 cjump_inst: CJUMP temp COMMA label COMMA . label

    LABEL  shift, and go to state 23

    label  go to state 107


State 101

   37 fun_call: CALL IDENTIFIER COMMA OPRPAR args . CLRPAR

    CLRPAR  shift, and go to state 108


State 102

   33 args: temp . more_args

    COMMA  shift, and go to state 109

    $default  reduce using rule 36 (more_args)

    more_args  go to state 110


State 103

   38 fun_call: temp ARROW ICALL IDENTIFIER COMMA . OPRPAR args CLRPAR

    OPRPAR  shift, and go to state 111


State 104

   23 double_inst: temp ARROW dinst temp COMMA . temp

    TEMP  shift, and go to state 22

    temp  go to state 112


State 105

   31 fun_args: OPPAR type . IDENTIFIER CLPAR fun_args

    IDENTIFIER  shift, and go to state 113


State 106

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR . OPRPAR fun_args CLRPAR CLPAR

    OPRPAR  shift, and go to state 114


State 107

   29 cjump_inst: CJUMP temp COMMA label COMMA label .

    $default  reduce using rule 29 (cjump_inst)


State 108

   37 fun_call: CALL IDENTIFIER COMMA OPRPAR args CLRPAR .

    $default  reduce using rule 37 (fun_call)


State 109

   35 more_args: COMMA . temp more_args

    TEMP  shift, and go to state 22

    temp  go to state 115


State 110

   33 args: temp more_args .

    $default  reduce using rule 33 (args)


State 111

   38 fun_call: temp ARROW ICALL IDENTIFIER COMMA OPRPAR . args CLRPAR

    TEMP  shift, and go to state 22

    $default  reduce using rule 34 (args)

    args  go to state 116
    temp  go to state 102


State 112

   23 double_inst: temp ARROW dinst temp COMMA temp .

    $default  reduce using rule 23 (double_inst)


State 113

   31 fun_args: OPPAR type IDENTIFIER . CLPAR fun_args

    CLPAR  shift, and go to state 117


State 114

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR . fun_args CLRPAR CLPAR

    OPPAR  shift, and go to state 97

    $default  reduce using rule 32 (fun_args)

    fun_args  go to state 118


State 115

   35 more_args: COMMA temp . more_args

    COMMA  shift, and go to state 109

    $default  reduce using rule 36 (more_args)

    more_args  go to state 119


State 116

   38 fun_call: temp ARROW ICALL IDENTIFIER COMMA OPRPAR args . CLRPAR

    CLRPAR  shift, and go to state 120


State 117

   31 fun_args: OPPAR type IDENTIFIER CLPAR . fun_args

    OPPAR  shift, and go to state 97

    $default  reduce using rule 32 (fun_args)

    fun_args  go to state 121


State 118

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args . CLRPAR CLPAR

    CLRPAR  shift, and go to state 122


State 119

   35 more_args: COMMA temp more_args .

    $default  reduce using rule 35 (more_args)


State 120

   38 fun_call: temp ARROW ICALL IDENTIFIER COMMA OPRPAR args CLRPAR .

    $default  reduce using rule 38 (fun_call)


State 121

   31 fun_args: OPPAR type IDENTIFIER CLPAR fun_args .

    $default  reduce using rule 31 (fun_args)


State 122

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR . CLPAR

    CLPAR  shift, and go to state 123


State 123

    9 fun_arg: OPPAR ID IDENTIFIER FUN type OPRPAR fun_args CLRPAR OPRPAR fun_args CLRPAR CLPAR .

    $default  reduce using rule 9 (fun_arg)
