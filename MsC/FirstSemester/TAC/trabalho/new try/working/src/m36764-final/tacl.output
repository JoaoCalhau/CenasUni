Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | %empty

    4 declaration: OPPAR VAR identifier expression CLPAR
    5            | OPPAR FUN IDENTIFIER OPRPAR formal_args CLRPAR body CLPAR

    6 identifier: OPPAR ID IDENTIFIER kind type CLPAR

    7 formal_args: OPPAR ARG IDENTIFIER type CLPAR formal_args
    8            | %empty

    9 body: OPPAR BODY OPRPAR declarations CLRPAR statement expression CLPAR

   10 statements: statement statements
   11           | statement

   12 statement: assign
   13          | fun_call
   14          | print
   15          | conditional
   16          | loop
   17          | compound
   18          | empty

   19 assign: OPPAR ASSIGN identifier expression CLPAR

   20 fun_call: OPPAR CALL IDENTIFIER OPRPAR expressions CLRPAR CLPAR

   21 print: OPPAR PRINT expression CLPAR

   22 conditional: OPPAR IF expression statement statement CLPAR

   23 loop: OPPAR WHILE expression statement CLPAR

   24 compound: OPRPAR statements CLRPAR
   25         | OPRPAR CLRPAR

   26 expressions: expression expressions
   27            | expression

   28 expression: OPPAR compare_op expression expression CLPAR COLON type
   29           | OPPAR PLUS expression expression CLPAR COLON type
   30           | OPPAR MINUS expression expression CLPAR COLON type
   31           | OPPAR TIMES expression expression CLPAR COLON type
   32           | OPPAR DIV expression expression CLPAR COLON type
   33           | OPPAR MOD expression expression CLPAR COLON type
   34           | OPPAR NOT expression CLPAR COLON type
   35           | OPPAR INV expression CLPAR COLON type
   36           | identifier COLON type
   37           | OPPAR INT_LITERAL VALUE_INT CLPAR COLON type
   38           | OPPAR REAL_LITERAL VALUE_REAL CLPAR COLON type
   39           | TRUE
   40           | FALSE
   41           | fun_call COLON type
   42           | toreal COLON type
   43           | empty

   44 toreal: OPPAR TOREAL expression CLPAR

   45 compare_op: OR
   46           | AND
   47           | EQ
   48           | NE
   49           | LT
   50           | LE
   51           | GT
   52           | GE

   53 empty: NIL

   54 type: INT
   55     | REAL
   56     | BOOL

   57 kind: VAR
   58     | LOCAL
   59     | ARG


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 5 6 7 20
VALUE_INT (259) 37
VALUE_REAL (260) 38
FUN (261) 5
VAR (262) 4 57
INT (263) 54
REAL (264) 55
BOOL (265) 56
COLON (266) 28 29 30 31 32 33 34 35 36 37 38 41 42
OPPAR (267) 4 5 6 7 9 19 20 21 22 23 28 29 30 31 32 33 34 35 37 38
    44
CLPAR (268) 4 5 6 7 9 19 20 21 22 23 28 29 30 31 32 33 34 35 37 38
    44
OPRPAR (269) 5 9 20 24 25
CLRPAR (270) 5 9 20 24 25
NIL (271) 53
ID (272) 6
LOCAL (273) 58
ARG (274) 7 59
BODY (275) 9
ASSIGN (276) 19
CALL (277) 20
PRINT (278) 21
IF (279) 22
WHILE (280) 23
TRUE (281) 39
FALSE (282) 40
TOREAL (283) 44
INT_LITERAL (284) 37
REAL_LITERAL (285) 38
OR (286) 45
AND (287) 46
EQ (288) 47
NE (289) 48
LT (290) 49
LE (291) 50
GT (292) 51
GE (293) 52
PLUS (294) 29
MINUS (295) 30
TIMES (296) 31
DIV (297) 32
MOD (298) 33
NOT (299) 34
INV (300) 35


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
declarations (48)
    on left: 2 3, on right: 1 2 9
declaration (49)
    on left: 4 5, on right: 2
identifier (50)
    on left: 6, on right: 4 19 36
formal_args (51)
    on left: 7 8, on right: 5 7
body (52)
    on left: 9, on right: 5
statements (53)
    on left: 10 11, on right: 10 24
statement (54)
    on left: 12 13 14 15 16 17 18, on right: 9 10 11 22 23
assign (55)
    on left: 19, on right: 12
fun_call (56)
    on left: 20, on right: 13 41
print (57)
    on left: 21, on right: 14
conditional (58)
    on left: 22, on right: 15
loop (59)
    on left: 23, on right: 16
compound (60)
    on left: 24 25, on right: 17
expressions (61)
    on left: 26 27, on right: 20 26
expression (62)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43, on right:
    4 9 19 21 22 23 26 27 28 29 30 31 32 33 34 35 44
toreal (63)
    on left: 44, on right: 42
compare_op (64)
    on left: 45 46 47 48 49 50 51 52, on right: 28
empty (65)
    on left: 53, on right: 18 43
type (66)
    on left: 54 55 56, on right: 6 7 28 29 30 31 32 33 34 35 36 37
    38 41 42
kind (67)
    on left: 57 58 59, on right: 6


State 0

    0 $accept: . program $end

    OPPAR  shift, and go to state 1

    $default  reduce using rule 3 (declarations)

    program       go to state 2
    declarations  go to state 3
    declaration   go to state 4


State 1

    4 declaration: OPPAR . VAR identifier expression CLPAR
    5            | OPPAR . FUN IDENTIFIER OPRPAR formal_args CLRPAR body CLPAR

    FUN  shift, and go to state 5
    VAR  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 4

    2 declarations: declaration . declarations

    OPPAR  shift, and go to state 1

    $default  reduce using rule 3 (declarations)

    declarations  go to state 8
    declaration   go to state 4


State 5

    5 declaration: OPPAR FUN . IDENTIFIER OPRPAR formal_args CLRPAR body CLPAR

    IDENTIFIER  shift, and go to state 9


State 6

    4 declaration: OPPAR VAR . identifier expression CLPAR

    OPPAR  shift, and go to state 10

    identifier  go to state 11


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 9

    5 declaration: OPPAR FUN IDENTIFIER . OPRPAR formal_args CLRPAR body CLPAR

    OPRPAR  shift, and go to state 12


State 10

    6 identifier: OPPAR . ID IDENTIFIER kind type CLPAR

    ID  shift, and go to state 13


State 11

    4 declaration: OPPAR VAR identifier . expression CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 20
    toreal      go to state 21
    empty       go to state 22


State 12

    5 declaration: OPPAR FUN IDENTIFIER OPRPAR . formal_args CLRPAR body CLPAR

    OPPAR  shift, and go to state 23

    $default  reduce using rule 8 (formal_args)

    formal_args  go to state 24


State 13

    6 identifier: OPPAR ID . IDENTIFIER kind type CLPAR

    IDENTIFIER  shift, and go to state 25


State 14

    6 identifier: OPPAR . ID IDENTIFIER kind type CLPAR
   20 fun_call: OPPAR . CALL IDENTIFIER OPRPAR expressions CLRPAR CLPAR
   28 expression: OPPAR . compare_op expression expression CLPAR COLON type
   29           | OPPAR . PLUS expression expression CLPAR COLON type
   30           | OPPAR . MINUS expression expression CLPAR COLON type
   31           | OPPAR . TIMES expression expression CLPAR COLON type
   32           | OPPAR . DIV expression expression CLPAR COLON type
   33           | OPPAR . MOD expression expression CLPAR COLON type
   34           | OPPAR . NOT expression CLPAR COLON type
   35           | OPPAR . INV expression CLPAR COLON type
   37           | OPPAR . INT_LITERAL VALUE_INT CLPAR COLON type
   38           | OPPAR . REAL_LITERAL VALUE_REAL CLPAR COLON type
   44 toreal: OPPAR . TOREAL expression CLPAR

    ID            shift, and go to state 13
    CALL          shift, and go to state 26
    TOREAL        shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    OR            shift, and go to state 30
    AND           shift, and go to state 31
    EQ            shift, and go to state 32
    NE            shift, and go to state 33
    LT            shift, and go to state 34
    LE            shift, and go to state 35
    GT            shift, and go to state 36
    GE            shift, and go to state 37
    PLUS          shift, and go to state 38
    MINUS         shift, and go to state 39
    TIMES         shift, and go to state 40
    DIV           shift, and go to state 41
    MOD           shift, and go to state 42
    NOT           shift, and go to state 43
    INV           shift, and go to state 44

    compare_op  go to state 45


State 15

   53 empty: NIL .

    $default  reduce using rule 53 (empty)


State 16

   39 expression: TRUE .

    $default  reduce using rule 39 (expression)


State 17

   40 expression: FALSE .

    $default  reduce using rule 40 (expression)


State 18

   36 expression: identifier . COLON type

    COLON  shift, and go to state 46


State 19

   41 expression: fun_call . COLON type

    COLON  shift, and go to state 47


State 20

    4 declaration: OPPAR VAR identifier expression . CLPAR

    CLPAR  shift, and go to state 48


State 21

   42 expression: toreal . COLON type

    COLON  shift, and go to state 49


State 22

   43 expression: empty .

    $default  reduce using rule 43 (expression)


State 23

    7 formal_args: OPPAR . ARG IDENTIFIER type CLPAR formal_args

    ARG  shift, and go to state 50


State 24

    5 declaration: OPPAR FUN IDENTIFIER OPRPAR formal_args . CLRPAR body CLPAR

    CLRPAR  shift, and go to state 51


State 25

    6 identifier: OPPAR ID IDENTIFIER . kind type CLPAR

    VAR    shift, and go to state 52
    LOCAL  shift, and go to state 53
    ARG    shift, and go to state 54

    kind  go to state 55


State 26

   20 fun_call: OPPAR CALL . IDENTIFIER OPRPAR expressions CLRPAR CLPAR

    IDENTIFIER  shift, and go to state 56


State 27

   44 toreal: OPPAR TOREAL . expression CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 57
    toreal      go to state 21
    empty       go to state 22


State 28

   37 expression: OPPAR INT_LITERAL . VALUE_INT CLPAR COLON type

    VALUE_INT  shift, and go to state 58


State 29

   38 expression: OPPAR REAL_LITERAL . VALUE_REAL CLPAR COLON type

    VALUE_REAL  shift, and go to state 59


State 30

   45 compare_op: OR .

    $default  reduce using rule 45 (compare_op)


State 31

   46 compare_op: AND .

    $default  reduce using rule 46 (compare_op)


State 32

   47 compare_op: EQ .

    $default  reduce using rule 47 (compare_op)


State 33

   48 compare_op: NE .

    $default  reduce using rule 48 (compare_op)


State 34

   49 compare_op: LT .

    $default  reduce using rule 49 (compare_op)


State 35

   50 compare_op: LE .

    $default  reduce using rule 50 (compare_op)


State 36

   51 compare_op: GT .

    $default  reduce using rule 51 (compare_op)


State 37

   52 compare_op: GE .

    $default  reduce using rule 52 (compare_op)


State 38

   29 expression: OPPAR PLUS . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 60
    toreal      go to state 21
    empty       go to state 22


State 39

   30 expression: OPPAR MINUS . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 61
    toreal      go to state 21
    empty       go to state 22


State 40

   31 expression: OPPAR TIMES . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 62
    toreal      go to state 21
    empty       go to state 22


State 41

   32 expression: OPPAR DIV . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 63
    toreal      go to state 21
    empty       go to state 22


State 42

   33 expression: OPPAR MOD . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 64
    toreal      go to state 21
    empty       go to state 22


State 43

   34 expression: OPPAR NOT . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 65
    toreal      go to state 21
    empty       go to state 22


State 44

   35 expression: OPPAR INV . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 66
    toreal      go to state 21
    empty       go to state 22


State 45

   28 expression: OPPAR compare_op . expression expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 67
    toreal      go to state 21
    empty       go to state 22


State 46

   36 expression: identifier COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 71


State 47

   41 expression: fun_call COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 72


State 48

    4 declaration: OPPAR VAR identifier expression CLPAR .

    $default  reduce using rule 4 (declaration)


State 49

   42 expression: toreal COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 73


State 50

    7 formal_args: OPPAR ARG . IDENTIFIER type CLPAR formal_args

    IDENTIFIER  shift, and go to state 74


State 51

    5 declaration: OPPAR FUN IDENTIFIER OPRPAR formal_args CLRPAR . body CLPAR

    OPPAR  shift, and go to state 75

    body  go to state 76


State 52

   57 kind: VAR .

    $default  reduce using rule 57 (kind)


State 53

   58 kind: LOCAL .

    $default  reduce using rule 58 (kind)


State 54

   59 kind: ARG .

    $default  reduce using rule 59 (kind)


State 55

    6 identifier: OPPAR ID IDENTIFIER kind . type CLPAR

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 77


State 56

   20 fun_call: OPPAR CALL IDENTIFIER . OPRPAR expressions CLRPAR CLPAR

    OPRPAR  shift, and go to state 78


State 57

   44 toreal: OPPAR TOREAL expression . CLPAR

    CLPAR  shift, and go to state 79


State 58

   37 expression: OPPAR INT_LITERAL VALUE_INT . CLPAR COLON type

    CLPAR  shift, and go to state 80


State 59

   38 expression: OPPAR REAL_LITERAL VALUE_REAL . CLPAR COLON type

    CLPAR  shift, and go to state 81


State 60

   29 expression: OPPAR PLUS expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 82
    toreal      go to state 21
    empty       go to state 22


State 61

   30 expression: OPPAR MINUS expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 83
    toreal      go to state 21
    empty       go to state 22


State 62

   31 expression: OPPAR TIMES expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 84
    toreal      go to state 21
    empty       go to state 22


State 63

   32 expression: OPPAR DIV expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 85
    toreal      go to state 21
    empty       go to state 22


State 64

   33 expression: OPPAR MOD expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 86
    toreal      go to state 21
    empty       go to state 22


State 65

   34 expression: OPPAR NOT expression . CLPAR COLON type

    CLPAR  shift, and go to state 87


State 66

   35 expression: OPPAR INV expression . CLPAR COLON type

    CLPAR  shift, and go to state 88


State 67

   28 expression: OPPAR compare_op expression . expression CLPAR COLON type

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 89
    toreal      go to state 21
    empty       go to state 22


State 68

   54 type: INT .

    $default  reduce using rule 54 (type)


State 69

   55 type: REAL .

    $default  reduce using rule 55 (type)


State 70

   56 type: BOOL .

    $default  reduce using rule 56 (type)


State 71

   36 expression: identifier COLON type .

    $default  reduce using rule 36 (expression)


State 72

   41 expression: fun_call COLON type .

    $default  reduce using rule 41 (expression)


State 73

   42 expression: toreal COLON type .

    $default  reduce using rule 42 (expression)


State 74

    7 formal_args: OPPAR ARG IDENTIFIER . type CLPAR formal_args

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 90


State 75

    9 body: OPPAR . BODY OPRPAR declarations CLRPAR statement expression CLPAR

    BODY  shift, and go to state 91


State 76

    5 declaration: OPPAR FUN IDENTIFIER OPRPAR formal_args CLRPAR body . CLPAR

    CLPAR  shift, and go to state 92


State 77

    6 identifier: OPPAR ID IDENTIFIER kind type . CLPAR

    CLPAR  shift, and go to state 93


State 78

   20 fun_call: OPPAR CALL IDENTIFIER OPRPAR . expressions CLRPAR CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier   go to state 18
    fun_call     go to state 19
    expressions  go to state 94
    expression   go to state 95
    toreal       go to state 21
    empty        go to state 22


State 79

   44 toreal: OPPAR TOREAL expression CLPAR .

    $default  reduce using rule 44 (toreal)


State 80

   37 expression: OPPAR INT_LITERAL VALUE_INT CLPAR . COLON type

    COLON  shift, and go to state 96


State 81

   38 expression: OPPAR REAL_LITERAL VALUE_REAL CLPAR . COLON type

    COLON  shift, and go to state 97


State 82

   29 expression: OPPAR PLUS expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 98


State 83

   30 expression: OPPAR MINUS expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 99


State 84

   31 expression: OPPAR TIMES expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 100


State 85

   32 expression: OPPAR DIV expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 101


State 86

   33 expression: OPPAR MOD expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 102


State 87

   34 expression: OPPAR NOT expression CLPAR . COLON type

    COLON  shift, and go to state 103


State 88

   35 expression: OPPAR INV expression CLPAR . COLON type

    COLON  shift, and go to state 104


State 89

   28 expression: OPPAR compare_op expression expression . CLPAR COLON type

    CLPAR  shift, and go to state 105


State 90

    7 formal_args: OPPAR ARG IDENTIFIER type . CLPAR formal_args

    CLPAR  shift, and go to state 106


State 91

    9 body: OPPAR BODY . OPRPAR declarations CLRPAR statement expression CLPAR

    OPRPAR  shift, and go to state 107


State 92

    5 declaration: OPPAR FUN IDENTIFIER OPRPAR formal_args CLRPAR body CLPAR .

    $default  reduce using rule 5 (declaration)


State 93

    6 identifier: OPPAR ID IDENTIFIER kind type CLPAR .

    $default  reduce using rule 6 (identifier)


State 94

   20 fun_call: OPPAR CALL IDENTIFIER OPRPAR expressions . CLRPAR CLPAR

    CLRPAR  shift, and go to state 108


State 95

   26 expressions: expression . expressions
   27            | expression .

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    $default  reduce using rule 27 (expressions)

    identifier   go to state 18
    fun_call     go to state 19
    expressions  go to state 109
    expression   go to state 95
    toreal       go to state 21
    empty        go to state 22


State 96

   37 expression: OPPAR INT_LITERAL VALUE_INT CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 110


State 97

   38 expression: OPPAR REAL_LITERAL VALUE_REAL CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 111


State 98

   29 expression: OPPAR PLUS expression expression CLPAR . COLON type

    COLON  shift, and go to state 112


State 99

   30 expression: OPPAR MINUS expression expression CLPAR . COLON type

    COLON  shift, and go to state 113


State 100

   31 expression: OPPAR TIMES expression expression CLPAR . COLON type

    COLON  shift, and go to state 114


State 101

   32 expression: OPPAR DIV expression expression CLPAR . COLON type

    COLON  shift, and go to state 115


State 102

   33 expression: OPPAR MOD expression expression CLPAR . COLON type

    COLON  shift, and go to state 116


State 103

   34 expression: OPPAR NOT expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 117


State 104

   35 expression: OPPAR INV expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 118


State 105

   28 expression: OPPAR compare_op expression expression CLPAR . COLON type

    COLON  shift, and go to state 119


State 106

    7 formal_args: OPPAR ARG IDENTIFIER type CLPAR . formal_args

    OPPAR  shift, and go to state 23

    $default  reduce using rule 8 (formal_args)

    formal_args  go to state 120


State 107

    9 body: OPPAR BODY OPRPAR . declarations CLRPAR statement expression CLPAR

    OPPAR  shift, and go to state 1

    $default  reduce using rule 3 (declarations)

    declarations  go to state 121
    declaration   go to state 4


State 108

   20 fun_call: OPPAR CALL IDENTIFIER OPRPAR expressions CLRPAR . CLPAR

    CLPAR  shift, and go to state 122


State 109

   26 expressions: expression expressions .

    $default  reduce using rule 26 (expressions)


State 110

   37 expression: OPPAR INT_LITERAL VALUE_INT CLPAR COLON type .

    $default  reduce using rule 37 (expression)


State 111

   38 expression: OPPAR REAL_LITERAL VALUE_REAL CLPAR COLON type .

    $default  reduce using rule 38 (expression)


State 112

   29 expression: OPPAR PLUS expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 123


State 113

   30 expression: OPPAR MINUS expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 124


State 114

   31 expression: OPPAR TIMES expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 125


State 115

   32 expression: OPPAR DIV expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 126


State 116

   33 expression: OPPAR MOD expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 127


State 117

   34 expression: OPPAR NOT expression CLPAR COLON type .

    $default  reduce using rule 34 (expression)


State 118

   35 expression: OPPAR INV expression CLPAR COLON type .

    $default  reduce using rule 35 (expression)


State 119

   28 expression: OPPAR compare_op expression expression CLPAR COLON . type

    INT   shift, and go to state 68
    REAL  shift, and go to state 69
    BOOL  shift, and go to state 70

    type  go to state 128


State 120

    7 formal_args: OPPAR ARG IDENTIFIER type CLPAR formal_args .

    $default  reduce using rule 7 (formal_args)


State 121

    9 body: OPPAR BODY OPRPAR declarations . CLRPAR statement expression CLPAR

    CLRPAR  shift, and go to state 129


State 122

   20 fun_call: OPPAR CALL IDENTIFIER OPRPAR expressions CLRPAR CLPAR .

    $default  reduce using rule 20 (fun_call)


State 123

   29 expression: OPPAR PLUS expression expression CLPAR COLON type .

    $default  reduce using rule 29 (expression)


State 124

   30 expression: OPPAR MINUS expression expression CLPAR COLON type .

    $default  reduce using rule 30 (expression)


State 125

   31 expression: OPPAR TIMES expression expression CLPAR COLON type .

    $default  reduce using rule 31 (expression)


State 126

   32 expression: OPPAR DIV expression expression CLPAR COLON type .

    $default  reduce using rule 32 (expression)


State 127

   33 expression: OPPAR MOD expression expression CLPAR COLON type .

    $default  reduce using rule 33 (expression)


State 128

   28 expression: OPPAR compare_op expression expression CLPAR COLON type .

    $default  reduce using rule 28 (expression)


State 129

    9 body: OPPAR BODY OPRPAR declarations CLRPAR . statement expression CLPAR

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    NIL     shift, and go to state 15

    statement    go to state 132
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 130

   19 assign: OPPAR . ASSIGN identifier expression CLPAR
   20 fun_call: OPPAR . CALL IDENTIFIER OPRPAR expressions CLRPAR CLPAR
   21 print: OPPAR . PRINT expression CLPAR
   22 conditional: OPPAR . IF expression statement statement CLPAR
   23 loop: OPPAR . WHILE expression statement CLPAR

    ASSIGN  shift, and go to state 140
    CALL    shift, and go to state 26
    PRINT   shift, and go to state 141
    IF      shift, and go to state 142
    WHILE   shift, and go to state 143


State 131

   24 compound: OPRPAR . statements CLRPAR
   25         | OPRPAR . CLRPAR

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    CLRPAR  shift, and go to state 144
    NIL     shift, and go to state 15

    statements   go to state 145
    statement    go to state 146
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 132

    9 body: OPPAR BODY OPRPAR declarations CLRPAR statement . expression CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 147
    toreal      go to state 21
    empty       go to state 22


State 133

   12 statement: assign .

    $default  reduce using rule 12 (statement)


State 134

   13 statement: fun_call .

    $default  reduce using rule 13 (statement)


State 135

   14 statement: print .

    $default  reduce using rule 14 (statement)


State 136

   15 statement: conditional .

    $default  reduce using rule 15 (statement)


State 137

   16 statement: loop .

    $default  reduce using rule 16 (statement)


State 138

   17 statement: compound .

    $default  reduce using rule 17 (statement)


State 139

   18 statement: empty .

    $default  reduce using rule 18 (statement)


State 140

   19 assign: OPPAR ASSIGN . identifier expression CLPAR

    OPPAR  shift, and go to state 10

    identifier  go to state 148


State 141

   21 print: OPPAR PRINT . expression CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 149
    toreal      go to state 21
    empty       go to state 22


State 142

   22 conditional: OPPAR IF . expression statement statement CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 150
    toreal      go to state 21
    empty       go to state 22


State 143

   23 loop: OPPAR WHILE . expression statement CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 151
    toreal      go to state 21
    empty       go to state 22


State 144

   25 compound: OPRPAR CLRPAR .

    $default  reduce using rule 25 (compound)


State 145

   24 compound: OPRPAR statements . CLRPAR

    CLRPAR  shift, and go to state 152


State 146

   10 statements: statement . statements
   11           | statement .

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    NIL     shift, and go to state 15

    $default  reduce using rule 11 (statements)

    statements   go to state 153
    statement    go to state 146
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 147

    9 body: OPPAR BODY OPRPAR declarations CLRPAR statement expression . CLPAR

    CLPAR  shift, and go to state 154


State 148

   19 assign: OPPAR ASSIGN identifier . expression CLPAR

    OPPAR  shift, and go to state 14
    NIL    shift, and go to state 15
    TRUE   shift, and go to state 16
    FALSE  shift, and go to state 17

    identifier  go to state 18
    fun_call    go to state 19
    expression  go to state 155
    toreal      go to state 21
    empty       go to state 22


State 149

   21 print: OPPAR PRINT expression . CLPAR

    CLPAR  shift, and go to state 156


State 150

   22 conditional: OPPAR IF expression . statement statement CLPAR

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    NIL     shift, and go to state 15

    statement    go to state 157
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 151

   23 loop: OPPAR WHILE expression . statement CLPAR

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    NIL     shift, and go to state 15

    statement    go to state 158
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 152

   24 compound: OPRPAR statements CLRPAR .

    $default  reduce using rule 24 (compound)


State 153

   10 statements: statement statements .

    $default  reduce using rule 10 (statements)


State 154

    9 body: OPPAR BODY OPRPAR declarations CLRPAR statement expression CLPAR .

    $default  reduce using rule 9 (body)


State 155

   19 assign: OPPAR ASSIGN identifier expression . CLPAR

    CLPAR  shift, and go to state 159


State 156

   21 print: OPPAR PRINT expression CLPAR .

    $default  reduce using rule 21 (print)


State 157

   22 conditional: OPPAR IF expression statement . statement CLPAR

    OPPAR   shift, and go to state 130
    OPRPAR  shift, and go to state 131
    NIL     shift, and go to state 15

    statement    go to state 160
    assign       go to state 133
    fun_call     go to state 134
    print        go to state 135
    conditional  go to state 136
    loop         go to state 137
    compound     go to state 138
    empty        go to state 139


State 158

   23 loop: OPPAR WHILE expression statement . CLPAR

    CLPAR  shift, and go to state 161


State 159

   19 assign: OPPAR ASSIGN identifier expression CLPAR .

    $default  reduce using rule 19 (assign)


State 160

   22 conditional: OPPAR IF expression statement statement . CLPAR

    CLPAR  shift, and go to state 162


State 161

   23 loop: OPPAR WHILE expression statement CLPAR .

    $default  reduce using rule 23 (loop)


State 162

   22 conditional: OPPAR IF expression statement statement CLPAR .

    $default  reduce using rule 22 (conditional)
